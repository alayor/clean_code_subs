1
00:00:09,248 --> 00:00:11,699


2
00:00:11,699 --> 00:00:13,467
- Hola, soy Amanda.

3
00:00:13,467 --> 00:00:14,792
- Hola, soy Elizabeth.

4
00:00:14,792 --> 00:00:16,413
- Hola, soy Alexis.

5
00:00:16,413 --> 00:00:18,205
- Hi, soy Mufa.

6
00:00:18,205 --> 00:00:19,246
- Bienvenidos.
- A otro.

7
00:00:19,246 --> 00:00:20,079
- Episodio.

8
00:00:20,079 --> 00:00:21,037
- Episodio de.

9
00:00:21,037 --> 00:00:22,360
- Clean code.

10
00:00:22,360 --> 00:00:23,875
- Clean code.

11
00:00:23,875 --> 00:00:25,173
- Clean code.
- Clean code.

12
00:00:25,173 --> 00:00:27,073
- Vamos a emprender un viaje.

13
00:00:27,073 --> 00:00:28,663
- Para emprender un viaje de ...

14
00:00:28,663 --> 00:00:29,496
- En este episodio.

15
00:00:29,496 --> 00:00:30,329
- Episodio.

16
00:00:31,663 --> 00:00:33,281
- Wuujuu!.

17
00:00:33,281 --> 00:00:34,114
- Por Uncle Bob.

18
00:00:34,114 --> 00:00:35,781
- Uncle Bob.

19
00:00:36,792 --> 00:00:37,879
- Disfruten!

20
00:00:37,879 --> 00:00:40,796


21
00:00:44,139 --> 00:00:47,317


22
00:00:47,317 --> 00:00:49,984


23
00:00:51,624 --> 00:00:54,207


24
00:00:59,061 --> 00:01:02,051
- Bienvenidos, bienvenidos a la nueva versión

25
00:01:02,051 --> 00:01:05,011
del episodio uno de Clean Code.

26
00:01:05,011 --> 00:01:06,761
Permíteme tomar tu sombrero.

27
00:01:08,586 --> 00:01:10,965
Entonces, han pasado dos años y medio

28
00:01:10,965 --> 00:01:14,224
desde que escribí y produje
ese primer episodio.

29
00:01:14,224 --> 00:01:17,645
Y ahora con 20 episodios en nuestro haber,

30
00:01:17,645 --> 00:01:20,685
pensamos que era hora de
resaltar ese viejo primer episodio

31
00:01:20,685 --> 00:01:23,555
y llevarlo a nuestros
estándares actuales de

32
00:01:23,555 --> 00:01:27,445
scripting, video, y edición de audio.

`33
00:01:27,445 --> 00:01:30,176
Después de todo, este es el primer
episodio que mucha gente

34
00:01:30,176 --> 00:01:32,115
va a ver, y nosotros pensamos que las

35
00:01:32,115 --> 00:01:33,925
primeras impresiones son importantes,

36
00:01:33,925 --> 00:01:36,565
asi que refactorizamos completamente todo.

37
00:01:36,565 --> 00:01:38,528
Y entonces, sin más preámbulos,

38
00:01:38,528 --> 00:01:42,695
este es el nuevo y mas limpio
episodio uno, Clean Code.

39
00:01:44,176 --> 00:01:47,088


40
00:01:47,088 --> 00:01:49,755


41
00:01:52,645 --> 00:01:56,812
En 1908, Henrietta Swan
Leavitt, una astrónoma que trabajaba

42
00:01:57,741 --> 00:02:00,963
en Harvard, realizó un increíble descrubrimiento,

43
00:02:00,963 --> 00:02:04,296
uno que cambiaría la astronomía para siempre.

44
00:02:05,253 --> 00:02:09,011
La astrofotografía estaba recién
llegando a su apogeo.

45
00:02:09,011 --> 00:02:12,229
Los astrónomos estaban produciendo
muchas placas fotográficas

46
00:02:12,229 --> 00:02:15,789
que no tenían
tiempo para analizarlas todas.

47
00:02:15,789 --> 00:02:18,829
En aquel entonces, a las mujeres no se
les permitía operar los

48
00:02:18,829 --> 00:02:22,456
telescopios, pero eran
consideradas capaces de hacer

49
00:02:22,456 --> 00:02:24,496
mediciones en placas fotográficas

50
00:02:24,496 --> 00:02:28,663
y hacer cálculos
basados en esas medidas.

51
00:02:29,616 --> 00:02:32,317
Leavitt, quien inicialmente trabajó sin sueldo

52
00:02:32,317 --> 00:02:35,016
y luego de ello se le pagaban 30 centavos por hora,

53
00:02:35,016 --> 00:02:38,317
fue solicitada por su jefe, Edward Pickering,

54
00:02:38,317 --> 00:02:41,165
para que estudiara y midiera estrellas variables,

55
00:02:41,165 --> 00:02:44,915
estrellas que cambian su
brillo con el tiempo

56
00:02:46,475 --> 00:02:49,808
Encontrar y estudiar estrellas variables usando

57
00:02:49,808 --> 00:02:53,459
placas fotográficas no es una tarea fácil.

58
00:02:53,459 --> 00:02:55,808
Comienzas con una placa fotográfica

59
00:02:55,808 --> 00:02:59,059
que tiene cientos y
cientos de estrellas en él,

60
00:02:59,059 --> 00:03:03,027
y luego mides cada
brillo de estrella individual

61
00:03:03,027 --> 00:03:06,587
midiendo el diámetro de la mancha

62
00:03:06,587 --> 00:03:08,387
en la placa fotográfica.

63
00:03:08,387 --> 00:03:11,979
Y haces esto por
cada estrella en el plato.

64
00:03:11,979 --> 00:03:14,576
Y luego obtienes otro
placa fotográfica

65
00:03:14,576 --> 00:03:18,277
de la misma parte del cielo
tomado en un momento diferente,

66
00:03:18,277 --> 00:03:20,704
y realizas todas esas medidas de nuevo,

67
00:03:20,704 --> 00:03:23,323
y los correlacionas, buscando estrellas

68
00:03:23,323 --> 00:03:25,440
que cambiaron en brillo.

69
00:03:25,440 --> 00:03:28,960
Y luego haces eso
una y otra y otra vez

70
00:03:28,960 --> 00:03:31,440
para cientos y cientos de platos

71
00:03:31,440 --> 00:03:33,190
durante años y años.

72
00:03:36,101 --> 00:03:38,629
En el caso de Leavitt, fueron los 20 años

73
00:03:38,629 --> 00:03:40,462
entre 1893 y 1912.

74
00:03:42,309 --> 00:03:44,421
Y en esas décadas fatales,

75
00:03:44,421 --> 00:03:47,941
ella hizo uno de los
descubrimientos más increíblemente útiles

76
00:03:47,941 --> 00:03:50,274
en la historia de la astronomía.

77
00:03:51,768 --> 00:03:54,856
Como sabrás, ella notó algo peculiar

78
00:03:54,856 --> 00:03:57,397
sobre las nubes de Magallanes

79
00:03:57,397 --> 00:04:00,027
Ahora estas nubes,
a simple vista, son solo

80
00:04:00,027 --> 00:04:03,907
parches de pelusa en el
cielo del hemisferio sur,

81
00:04:03,907 --> 00:04:07,656
pero en una placa fotográfica
tomado a través de un telescopio,

82
00:04:07,656 --> 00:04:11,823
son nubes de millones
sobre millones de estrellas.

83
00:04:13,907 --> 00:04:17,717
Lo que Leavitt notó fue
que miles de esas estrellas

84
00:04:17,717 --> 00:04:21,176
en las nubes de Magallanes
eran estrellas variables,

85
00:04:21,176 --> 00:04:24,093
su brillo cambió con el tiempo.

86
00:04:25,456 --> 00:04:28,248
Ahora hay un cierto
tipo de estrella variable

87
00:04:28,248 --> 00:04:30,645
llamada una variable cefeida.

88
00:04:30,645 --> 00:04:34,645
Y las variables cefeidas pulsan
con ritmos muy regulares.

89
00:04:34,645 --> 00:04:37,392
Algunos de ellos pulsan
una vez en un par de días,

90
00:04:37,392 --> 00:04:40,528
otros latirán una vez
en un par de semanas.

91
00:04:40,528 --> 00:04:44,747
Por qué pulsan será un
tema de otro episodio.

92
00:04:44,747 --> 00:04:48,787
Leavitt encontró muchas de esas variables cefeidas

93
00:04:48,787 --> 00:04:50,416
en las nubes de Magallanes,

94
00:04:50,416 --> 00:04:53,166
todas pulsando a diferentes velocidades.

95
00:04:54,317 --> 00:04:58,717
Pero luego notó algo
que no era cierto en otro lugar.

96
00:04:58,717 --> 00:05:02,440
Las variables cefeidas más brillantes
en las nubes de Magallanes

97
00:05:02,440 --> 00:05:06,392
pulsaban más lentamente que las más tenues.

98
00:05:06,392 --> 00:05:09,285
¿Por qué pasaría esto
en las nubes de Magallanes

99
00:05:09,285 --> 00:05:11,702
pero no en otro lugar en el cielo?

100
00:05:13,312 --> 00:05:16,133
Pero luego se le ocurrió a ella.

101
00:05:16,133 --> 00:05:19,893
¿Qué tal si todas las estrellas
en la nube de Magallanes

102
00:05:19,893 --> 00:05:23,872
estaban más o menos a la misma distancia de nosotros?

103
00:05:23,872 --> 00:05:26,965
Si eso era cierto, entonces
la velocidad a la que

104
00:05:26,965 --> 00:05:29,773
las variables cefeidas pulsadas estaban relacionadas

105
00:05:29,773 --> 00:05:32,023
a su brillo real.

106
00:05:34,123 --> 00:05:37,933
Ella hizo los cálculos y se acercó
con una simple y hermosa

107
00:05:37,933 --> 00:05:42,541
fórmula llamada el período
relación de luminosidad.

108
00:05:42,541 --> 00:05:46,413
Dado el período de una estrella
en las nubes de Magallanes,

109
00:05:46,413 --> 00:05:49,621
usando esta fórmula, ella
podría predecir la luminosidad,

110
00:05:49,621 --> 00:05:54,013
o dada la luminosidad de un
estrella en las nubes de Magallanes,

111
00:05:54,013 --> 00:05:58,013
ella podría usar la fórmula
para predecir el período.

112
00:05:59,381 --> 00:06:02,021
Ahora, tal vez te estás preguntando
por qué esto fue tan útil,

113
00:06:02,021 --> 00:06:04,517
pero déjame decirte, es realmente útil.

114
00:06:04,517 --> 00:06:08,048
Y la razón es que si
puedes medir la distancia

115
00:06:08,048 --> 00:06:12,408
a una sola variable cefeida
estrella, una que está cerca,

116
00:06:12,408 --> 00:06:15,747
entonces puedes calibrar
la fórmula de Leavitt para que te diga

117
00:06:15,747 --> 00:06:18,395
donde está cualquier estrella variable cefeida.

118
00:06:18,395 --> 00:06:21,475
Mientras puedas medir
su período y luminosidad,

119
00:06:21,475 --> 00:06:24,058
puedes calcular su distancia

120
00:06:25,664 --> 00:06:28,453
Sobra decir que la cacería había iniciado.

121
00:06:28,453 --> 00:06:31,229
Y fue solo un año
más tarde que Ejnar Hertzsprung

122
00:06:31,229 --> 00:06:35,117
midió la distancia a
varias estrellas variables cefeidas.

123
00:06:35,117 --> 00:06:38,579
Usando esos números, la fórmula
de Leavitt fue calibrada

124
00:06:38,579 --> 00:06:41,496
de tal manera que podría decirte
la distancia a cualquier

125
00:06:41,496 --> 00:06:44,576
variable cefeida si pudieras medir su

126
00:06:44,576 --> 00:06:47,409
período y su luminosidad promedio.

127
00:06:48,656 --> 00:06:50,616
Déjame repetir eso.

128
00:06:50,616 --> 00:06:53,448
Ahora podríamos determinar
con precision la distancia

129
00:06:53,448 --> 00:06:57,917
a cualquier objeto que contenga
una variable cefeida

130
00:06:57,917 --> 00:07:00,837
¿Qué objetos contienen las variables cefeidas?

131
00:07:00,837 --> 00:07:03,504
Oh, cúmulos globulares, galaxias,

132
00:07:04,997 --> 00:07:07,914
pero ese es un tema para otro día.

133
00:07:09,235 --> 00:07:13,187
Por ahora, solo recuerda eso
la vara de medir que usamos

134
00:07:13,187 --> 00:07:17,885
para medir el universo
en sí fue el resultado de

135
00:07:17,885 --> 00:07:21,645
el cuidadoso y dedicado
esfuerzo de una mujer notable,

136
00:07:21,645 --> 00:07:23,562
Henrietta Swan Leavitt.

137
00:07:24,453 --> 00:07:27,685


138
00:07:27,685 --> 00:07:30,352


139
00:07:32,915 --> 00:07:36,741
En 2008, Kent Beck escribió
este maravilloso libro,

140
00:07:36,741 --> 00:07:38,611
Implementation Patterns.

141
00:07:38,611 --> 00:07:42,027
Está lleno de consejos y técnicas
que los programadores pueden usar

142
00:07:42,027 --> 00:07:46,229
para mantener su código bien
estructurado y bien ordenado.

143
00:07:46,229 --> 00:07:48,789
Pero él comenzó este libro
con lo que considero

144
00:07:48,789 --> 00:07:51,379
ser una declaración sorprendente.

145
00:07:51,379 --> 00:07:55,592
Él dijo: "En realidad, esto
libro está construido sobre una

146
00:07:55,592 --> 00:07:59,009
"premisa frágil que el buen código importa".

147
00:08:02,155 --> 00:08:03,738
- ¿Frágil? ¿Frágil?

148
00:08:04,856 --> 00:08:06,395
No veo nada frágil

149
00:08:06,395 --> 00:08:08,592
sobre el hecho de que el buen código importa,

150
00:08:08,592 --> 00:08:09,939
por supuesto que importa!

151
00:08:09,939 --> 00:08:12,275
Qué tonterías pensar de otra manera.

152
00:08:12,275 --> 00:08:13,108
Hmph!

153
00:08:15,163 --> 00:08:18,624
- Por supuesto, como el autor
de este libro, Clean Code,

154
00:08:18,624 --> 00:08:22,124
Tengo que estar de acuerdo, limpiar el código importa mucho.

155
00:08:24,621 --> 00:08:27,381
- De hecho, código limpio
puede hacer la diferencia

156
00:08:27,381 --> 00:08:30,531
entre el éxito o fracaso final

157
00:08:30,531 --> 00:08:31,864
de su empresa

158
00:08:33,445 --> 00:08:36,227
- He experimentado esto bastante directamente.

159
00:08:36,227 --> 00:08:39,387
Aquí, déjame contarte esta historia de

160
00:08:39,387 --> 00:08:41,637
la compañía asesinada por código.

161
00:08:44,096 --> 00:08:48,965
En 1988, más o menos, yo
estaba trabajando para una compañía.

162
00:08:48,965 --> 00:08:50,917
Y estábamos construyendo un gran

163
00:08:50,917 --> 00:08:53,707
sistema de gestión de red en C.

164
00:08:53,707 --> 00:08:57,874
Compramos un debugger
de una compañía llamada Sword.

165
00:08:59,435 --> 00:09:02,443
Nos permitió hacer debuggeo
línea por línea y crear breakpoints

166
00:09:02,443 --> 00:09:04,693
a través de nuestro código C

167
00:09:06,200 --> 00:09:09,627
- Whoa, como, tu sabes
tengo que debuggear mi

168
00:09:09,627 --> 00:09:12,960
código fuente de Ruby todo el tiempo, ya sabes.

169
00:09:15,216 --> 00:09:20,005
- Sí, pero en ese entonces un
debugger a nivel de codigo fuente era una rareza.

170
00:09:20,005 --> 00:09:24,133
Quiero decir la mayor parte del tiempo
debuggeabamos en hex.

171
00:09:24,133 --> 00:09:24,966
- Sí,

172
00:09:24,966 --> 00:09:25,825
sí, sí,

173
00:09:25,825 --> 00:09:27,155
eso suena como una pesadilla.

174
00:09:27,155 --> 00:09:29,405


175
00:09:30,549 --> 00:09:31,829
- Oh, lo era.

176
00:09:31,829 --> 00:09:34,128
Por supuesto, es todo lo que sabíamos, pero lo era.

177
00:09:34,128 --> 00:09:36,299
Pero mira, esta herramienta de Sword fue genial.

178
00:09:36,299 --> 00:09:38,757
Quiero decir que fue muy
poderosa, y nos salvó

179
00:09:38,757 --> 00:09:41,144
un montón de tiempo y esfuerzo.

180
00:09:41,144 --> 00:09:42,144
Nos encantó.

181
00:09:44,056 --> 00:09:45,653
- Cielos, Uncle Bob,

182
00:09:45,653 --> 00:09:49,820
eso debió haber sido un producto
realmente popular en ese entonces.

183
00:09:50,963 --> 00:09:52,416
- Oh, lo fue.

184
00:09:52,416 --> 00:09:55,448
Ellos estaban haciendo un
negociazo al principio.

185
00:09:55,448 --> 00:09:57,608
Las revistas comerciales los amaban,

186
00:09:57,608 --> 00:10:01,117
y la gente en los grupos de
usuarios y conferencias,

187
00:10:01,117 --> 00:10:03,200
no se daban abasto.

188
00:10:06,077 --> 00:10:09,408
Un par de años después, era 1990,

189
00:10:09,408 --> 00:10:11,557
y empezamos a soñar con cambiar

190
00:10:11,557 --> 00:10:13,557
de C a C++.

191
00:10:16,424 --> 00:10:18,624
Llamamos a Sword y le preguntamos
si ellos seguirían

192
00:10:18,624 --> 00:10:21,791
apoyando C++ en el futuro cercano.

193
00:10:23,312 --> 00:10:25,992
Nos dijeron que la versión de C++

194
00:10:25,992 --> 00:10:27,575
llegaría muy pronto

195
00:10:29,432 --> 00:10:30,849
Pero el tiempo pasó.

196
00:10:32,341 --> 00:10:34,508
Durante seis meses se prolongó.

197
00:10:36,931 --> 00:10:41,098
Pero finalmente, la versión C++
del debugger de Sword llegó.

198
00:10:42,083 --> 00:10:45,597
Estábamos muy emocionados.

199
00:10:45,597 --> 00:10:49,097
Y entonces lo instalamos y lo lanzamos.

200
00:10:50,317 --> 00:10:54,484
Pero tardó 45 minutos en
cargar y luego se cayó.

201
00:10:55,917 --> 00:10:57,517
- Sí.

202
00:10:57,517 --> 00:10:59,053
Boom.

203
00:10:59,053 --> 00:11:01,303


204
00:11:02,496 --> 00:11:05,347
- Bueno, no creímos que fuera gracioso.

205
00:11:05,347 --> 00:11:09,667
La depuración de C++ en hexadecimal no
es muy divertido,

206
00:11:09,667 --> 00:11:11,875
así que llamamos a Sword
y les dijimos que tenían

207
00:11:11,875 --> 00:11:15,149
que arreglar este problema, y ​​nos juraron

208
00:11:15,149 --> 00:11:18,317
que lo arreglarían en la próxima versión.

209
00:11:18,317 --> 00:11:19,880
- Sí.

210
00:11:19,880 --> 00:11:22,728
Y apuesto a que tomaron
otros seis meses

211
00:11:22,728 --> 00:11:26,077
para enviarte una nueva versión.

212
00:11:26,077 --> 00:11:28,994
Sí, Jerry, eso pasó, y créeme,

213
00:11:30,003 --> 00:11:33,413
nuestra paciencia se estaba acabando.

214
00:11:33,413 --> 00:11:34,925
- Sí, sí.

215
00:11:34,925 --> 00:11:36,651
Y luego cuando lo instalaste,

216
00:11:36,651 --> 00:11:38,443
tambien tardó 45 minutos en cargarse

217
00:11:38,443 --> 00:11:42,459
y luego se cayó, ¿no?

218
00:11:42,459 --> 00:11:46,042
- Sí, Jerry, eso es
exactamente lo que pasó

219
00:11:48,099 --> 00:11:50,427
No hace falta decir que cancelamos nuestra licencia

220
00:11:50,427 --> 00:11:52,467
y nos volvimos al negocio.

221
00:11:52,467 --> 00:11:55,339
Desde nuestro punto de vista,
ese producto estaba muerto.

222
00:11:55,339 --> 00:11:56,552


223
00:11:56,552 --> 00:11:57,739
- Interrumpimos este programa

224
00:11:57,739 --> 00:12:00,064
para traerte un boletín de noticias especial.

225
00:12:00,064 --> 00:12:04,613
Sword Inc., famoso creador de
del muy popular depurador C

226
00:12:04,613 --> 00:12:08,780
se ha declarado en bancarrota y
cerró sus puertas para siempre

227
00:12:09,675 --> 00:12:13,842
Ahora volvemos con nuestra
programacion habitual.

228
00:12:15.091 --> 00:12:18,749
- Sí, solo fueron unos pocos
meses después de esa desastroso

229
00:12:18,749 --> 00:12:21,101
segunda versión que la compañía se quemó

230
00:12:21,101 --> 00:12:23,434
y el producto desapareció

231
00:12:25,061 --> 00:12:28,061
Pero no es ahí donde termina la historia.

232
00:12:29,840 --> 00:12:33,291
Una década después, estaba en una conferencia de C++,

233
00:12:33,291 --> 00:12:35,189
y conocí a uno de los desarrolladores que solía

234
00:12:35,189 --> 00:12:37,867
trabajar en Sword en ese momento.

235
00:12:37,867 --> 00:12:42,034
Le pregunté qué había pasado,
y él me contó la historia.

236
00:12:43,467 --> 00:12:46,707
- Hijo, cuando comenzamos ese proyecto,

237
00:12:46,707 --> 00:12:50,288
esos yahoos en marketing
nos dijeron que teníamos que ser los primeros

238
00:12:50,288 --> 00:12:52,117
para comercializar a toda costa.

239
00:12:52,117 --> 00:12:54,597
Que si no éramos los primeros en
el mercado, entonces

240
00:12:54,597 --> 00:12:56,888
no tenía sentido ni siquiera para empezar.

241
00:12:56,888 --> 00:12:58,608
Entonces nos apuramos, hijo.

242
00:12:58,608 --> 00:13:01,728
Corrimos como un caballo
en un furioso incendio.

243
00:13:01,728 --> 00:13:04,539
Como un conejo corriendo
de un lobo gruñendo.

244
00:13:04,539 --> 00:13:08,019
Corrimos e hicimos un desastre.

245
00:13:08,019 --> 00:13:10,277
Cuando terminamos, ese
código parecía que toda una

246
00:13:10,277 --> 00:13:14,027
manada de cerdos hambrientos le
había pasado encima.

247
00:13:15,056 --> 00:13:18,645
Te digo, hijo, fue un
milagro ese código funcionara en absoluto.

248
00:13:18,645 --> 00:13:22,024
Y ponerlo en funcionamiento,
bueno, eso fue un montón de

249
00:13:22,024 --> 00:13:24,744
parches, ganchos,
revolturas, enredos,

250
00:13:24,744 --> 00:13:27,744
y cinta adhesiva, y toda
clase de malabares,

251
00:13:27,744 --> 00:13:30,616
pero lo teníamos funcionando,
hijo, lo teníamos funcionando

252
00:13:30,616 --> 00:13:33,116
a duras penas.

253
00:13:34,595 --> 00:13:37,245
Por supuesto, entonces, fue todo lo que pudimos hacer

254
00:13:37,245 --> 00:13:40,133
para mantenerlo funcionando, hijo,
porque siempre había

255
00:13:40,133 --> 00:13:44,093
otra corrección de errores o alguna
característica de alta prioridad.

256
00:13:44,093 --> 00:13:46,405
Los clientes siguieron queriendo escribir

257
00:13:46,405 --> 00:13:49,915
programas cada vez más grandes
e ir más rápido y más rápido.

258
00:13:49,915 --> 00:13:53,245
Así que nos seguimos apurando,
hijo, no había tiempo de

259
00:13:53,245 --> 00:13:56,464
regresar y limpiar nada
porque siempre había

260
00:13:56,464 --> 00:14:00,675
algo nuevo, otra cosa con
mayor prioridad, por la que

261
00:14:00,675 --> 00:14:03,299
que algún cliente tenía que estar satisfecho.

262
00:14:03,299 --> 00:14:06,821
Nunca logramos limpiarlo, hijo.

263
00:14:06,821 --> 00:14:11,000
Y luego, hijo, ¿por qué?
dejó caer una veta madre

264
00:14:11,000 --> 00:14:12,907
de estiércol de caballo en el ventilador.

265
00:14:12,907 --> 00:14:15,877
Nos dijeron que solo teníamos unos meses

266
00:14:15,877 --> 00:14:18,877
para que funcionara todo con C++.

267
00:14:18,877 --> 00:14:23,408
C++, hijo, ¿sabes qué tan difícil
es parsear ese lenguaje?

268
00:14:23,408 --> 00:14:25,368
Bueno, no es fácil, déjame decirte.

269
00:14:25,368 --> 00:14:28,517
Ahora, cuando vimos eso, dijimos,
"Eso era simplemente imposible".

270
00:14:28,517 --> 00:14:31,725
Ese código ya era un
desastre, estaba más enredado

271
00: 14: 31,725 ​​-> 00: 14: 34,225
que un pajar en un tornado.

272
00:14:35,355 --> 00:14:38,424
Oh, lo intentamos, hijo, lo intentamos bien.

273
00:14:38,424 --> 00:14:41,515
Estábamos trabajando en dar a luz

274
00:14:41,515 --> 00:14:43,323
a un semental adulto.

275
00:14:43,323 --> 00:14:46,064
Trabajamos por las mañanas
trabajamos por las tardes,

276
00:14:46,064 --> 00:14:47,861
trabajamos los fines de semana

277
00:14:47,861 --> 00:14:50,800
Trabajamos y trabajamos y trabajamos.

278
00:14:50,800 --> 00:14:53,157
Y fallamos, hijo, fallamos.

279
00:14:53,157 --> 00:14:57,027
No pudimos hacer que ese código
enredado parseara C++.

280
00:14:57,027 --> 00:14:59,610
Fue un desastre en consigna, hijo.

281
00:15:00,555 --> 00:15:02,163
Y la razón por la que fallamos

282
00:15:02,163 --> 00:15:05,580
fue porque nos apresuramos en primer lugar.

283
00:15:06,573 --> 00:15:10,173
- Está bien, lo admito, exageré
un poco, pero

284
00:15:10,173 --> 00:15:13,848
no en realidad por mucho y
no de ninguna manera sustantiva.

285
00:15:13,848 --> 00:15:17,400
Lo que el chico me dijo que
se apuraron con ese producto C

286
00:15:17,400 --> 00:15:19,859
para comercializarlo e hicieron un
gran desorden al intentar desarrollarlo.

287
00:15:19,859 --> 00:15:23,080
Y luego no pudieron hacer la transición a C++.

288
00:15:23,080 --> 00:15:26,320
Vieron que su mercado C menguaba
lejos debajo de

289
00:15:26,320 --> 00:15:29,437
ellos, y no pudieron seguirlo en C++

290
00:15:29,437 --> 00:15:33,667
debido al desastre
que hicieron en el código.

291
00:15:33,667 --> 00:15:36,069
- Parece que Sword Inc. fue

292
00:15:36,069 --> 00:15:38,928
destruida por su propio código malo.

293
00:15:38,928 --> 00:15:41,208
Al menos en su caso, la premisa de que

294
00:15:41,208 --> 00:15:44,625
el buen código no fue frágil en absoluto.

295
00:15:46,336 --> 00:15:49,169
- Sí, está bien, como, ya sabes,

296
00:15:49,169 --> 00:15:51,952
seguro, pero, pero, como, por qué?

297
00:15:51,952 --> 00:15:56,119
Quiero decir, que tenía el código
de malo para haberlos matado?

298
00:15:57,109 --> 00:16:00,411
(pitidos)

299
00:16:00,411 --> 00:16:03,078
(teclas haciendo clic)

300
00:16:06,051 --> 00:16:09,800
- ¿Alguna vez has trabajado
en un proyecto desde un inicio?

301
00:16:09,800 --> 00:16:13,280
¿Recuerdas lo productivo que era?

302
00:16:13,280 --> 00:16:14,819
(teclas haciendo clic)

303
00:16:14,819 --> 00:16:18,488
¿Recuerdas cómo un rayo
crepitaba desde la punta de tus dedos

304
00:16:18,488 --> 00:16:22,493
a medida que terminabas cada funcionalidad?.

305
00:16:22,493 --> 00:16:24,005
- Sí, (risas) sí, sí.

306
00:16:24,005 --> 00:16:26,195
Podría terminar todo un
conjunto de funcionalidades juntas

307
00:16:26,195 --> 00:16:28,083
en solo unas pocas horas. (Risa)

308
00:16:28,083 --> 00:16:31,149
Era divertido. (Risa)

309
00:16:31,149 --> 00:16:34,717
- Sí, tú, como tú
Sabes, vendrían a mí

310
00:16:34,717 --> 00:16:37,605
y me solían pedir una funcionalidad.

311
00:16:37,605 --> 00:16:41,643
Y yo, la tenía lista
para ellos esa misma tarde.

312
00:16:41,643 --> 00:16:44,976
Y entonces ellos realmente pensaban que yo era un héroe.

313
00:16:46,443 --> 00:16:50,333
- Sí, estoy seguro de que se sentía como
estabas yendo muy rápido,

314
00:16:50,333 --> 00:16:52,315
pero no duró, ¿verdad?

315
00:16:52,315 --> 00:16:55,133
A medida que pasaron los meses,
apuesto a que comenzaste a sentirte

316
00:16:55,133 --> 00:16:59,216
más y más lento, hasta sentir que
apenas estabas gateando.

317
00:17:01,093 --> 00:17:03,179
Eso es lo que sucede con los proyectos.

318
00:17:03,179 --> 00:17:06,179
Empiezan rápido, pero luego de unos pocos

319
00:17:06,179 --> 00:17:10,248
semanas o meses, se alentan demasiado.

320
00:17:10,248 --> 00:17:11,579
¿Y por qué?

321
00:17:11,579 --> 00:17:15,246
Porque hacen un desastre
con en el código.

322
00:17:16,349 --> 00:17:19,989
Cuanto más crece el desastre,
más difícil se vuelve

323
00:17:19,989 --> 00:17:23,560
para agregar nuevas características o
cambiar el código existente

324
00:17:23,560 --> 00:17:27,488
hasta que, finalmente, cosas que
te hubiera llevado días

325
00:17:27,488 --> 00:17:31,655
al principio ahora toma
semanas o incluso meses.

326
00:17:33,947 --> 00:17:37,699
Pero ahora piensa en ello desde
el punto de vista del gerente.

327
00:17:37,699 --> 00:17:40,088
Vieron lo rápido que
estaban yendo al principio,

328
00:17:40,088 --> 00:17:43,208
y ellos pusieron sus planes
basado en esa velocidad

329
00:17:43,208 --> 00:17:48,077
Hicieron promesas de
clientes basados ​​en esa velocidad.

330
00:17:48,077 --> 00:17:51,339
No entienden por qué disminuiste la velocidad.

331
00:17:51,339 --> 00:17:54,371
Todo lo que entienden es que
ahora están viendo esta

332
00:17:54,371 --> 00:17:59,360
brecha muy aterradora, una brecha que es
les cuesta mucho dinero

333
00:17:59,360 --> 00:18:03,848
y obligándolos a
romper muchas promesas

334
00:18:03,848 --> 00:18:07,219
Que harías si tu
fueron uno de esos gerentes

335
00:18:07,219 --> 00:18:10,019
y ver tus cuidadosos
planes de negocios establecidos

336
00:18:10,019 --> 00:18:12,784
esfumarse porque los programadores

337
00:18:12,784 --> 00:18:15,992
se habían vuelto lentos inexplicablemente?

338
00:18:15,992 --> 00:18:19,483
¿Qué harías si vieras
la ganancia esperada convertirse

339
00:18:19,483 --> 00:18:23,650
en una gran pérdida porque
los programadores estaban trabajando lento?

340
00:18:25,661 --> 00:18:29,061
- Les recordaría
la misión y sugeriría

341
00:18:29,061 --> 00:18:33,144
que encuentren una forma
más inteligente de trabajar.

342
00:18:34,808 --> 00:18:37,469
- Dios, Uncle Bob, yo
creo que lo que haría sería

343
00:18:37,469 --> 00:18:39,563
sentarlos a todos para tomar un café o

344
00:18:39,563 --> 00:18:43,525
tal vez un poco de té de hierbas y preguntarles
cuáles fueron sus problemas.

345
00:18:43,525 --> 00:18:45,829
Al final, creo que probablemente terminaría

346
00:18:45,829 --> 00:18:49,288
rogándoles que fueran más rápido. (riendo)

347
00:18:49,288 --> 00:18:52,915
- Bueno, yo les diría a esos osos
perezosos que se pusieran en movimiento.

348
00:18:52,915 --> 00:18:56,667
Apretaría sus fechas límite,
Los haría trabajar horas extras.

349
00:18:56,667 --> 00:19:00,834
Y si alguno de ellos se quejaba,
les mostraría la cámara de aire.

350
00:19:01,672 --> 00:19:04,955
- Por supuesto, nada de eso
va a hacer ni un poco de bien

351
00:19:04,955 --> 00:19:07,864
porque el problema
no es que los programadores

352
00:19:07,864 --> 00:19:10,419
no están trabajando duro, lo están.

353
00:19:10,419 --> 00:19:13,699
El problema es que
el código los está volviendo lentos,

354
00:19:13,699 --> 00:19:17,616
así que cuanto más duro trabajan,
más lento van.

355
00:19:21,128 --> 00:19:24,549
- Y entonces, a pesar de la
presión, las amenazas,

356
00:19:24,549 --> 00:19:28,269
los plazos y el
tiempo extra, la productividad aún

357
00:19:28,269 --> 00:19:32,102
mengua, y el miedo a
la brecha se agranda cada vez más.

358
00:19:34,749 --> 00:19:38,232
- [Profesor] ​​Me parece
que la solución a este

359
00:19:38,232 --> 00:19:41,912
problema es contratar a más programadores.

360
00:19:41,912 --> 00:19:46,079
Después de todo, si duplicas el
personal, doblas tu velocidad.

361
00:19:48,432 --> 00:19:50,421
- Bueno, no del todo.

362
00:19:50,421 --> 00:19:54,893
Verás, existe esta
cosa llamada "la ley de Brooks"

363
00:19:54,893 --> 00:19:58,981
que dice que agregar
mano de obra a un proyecto tardío

364
00:19:58,981 --> 00:20:00,231
lo hace más lento.

365
00:20:02,541 --> 00:20:04,363
Funciona así.

366
00:20:04,363 --> 00:20:07,872
El equipo está trabajando junto a
este nivel de productividad,

367
00:20:07,872 --> 00:20:10,952
y luego decidimos agregar más personal.

368
00:20:10,952 --> 00:20:14,013
La productividad cae en picada
por algunas semanas o meses

369
00:20:14.013 --> 00:20:17.693
como las nuevas personas chupan la
vida de las personas mayores,

370
00:20:17,693 --> 00:20:20,432
pero luego las nuevas personas comienzan a ser inteligentes

371
00:20:20,432 --> 00:20:22,763
y su productividad aumenta.

372
00:20:22,763 --> 00:20:26,930
En teoría, debería aumentar
arriba donde estaba antes.

373
00:20:28,803 --> 00:20:31,803
- Excepto por un pequeño error lógico.

374
00:20:33,293 --> 00:20:36,710
¿Precisamente quién enseña a las personas nuevas?

375
00:20:38,243 --> 00:20:40,512
- Las personas que hicieron esto.

376
00:20:40,512 --> 00:20:44,011
Y no es solo son las viejas
personas que enseñan a las personas nuevas,

377
00:20:44,011 --> 00:20:47,511
es el código viejo que enseña a las personas nuevas.

378
00:20:49,712 --> 00:20:52,731
Cuantas más personas nuevas
leen el código viejo

379
00:20:52,731 --> 00:20:55,848
y lidian con el código
viejo, más se dan cuenta

380
00:20:55,848 --> 00:20:58,568
cómo se hacen las cosas por aquí.

381
00:20:58,568 --> 00:21:01,917
Y entonces ellos emulan el
comportamientos que hicieron el lío en

382
00:21:01,917 --> 00:21:06,084
primer lugar, y, por supuesto,
el desastre continúa creciendo

383
00:21:07,355 --> 00:21:11,464
Y así todas las esperanzas de aumentar
la productividad se frenan

384
00:21:11,464 --> 00:21:15,784
mientras el creciente desastre
abruma al nuevo personal

385
00:21:15,784 --> 00:21:19,951
y la productividad reanuda
su tendencia inexorable a la baja.

386
00:21:22,528 --> 00:21:25,000
- Excepto que ahora el negocio está gastando

387
00:21:25,000 --> 00:21:27,768
mucho más dinero en ese nuevo personal.

388
00:21:27,768 --> 00:21:29,989
Y entonces la espantosa brecha se ha vuelto

389
00:21:29,989 --> 00:21:32,168
un poco más aterradora, ¿no?

390
00:21:32,168 --> 00:21:33,001
Hmph!

391
00:21:34,027 --> 00:21:35,163
- Correcto.

392
00:21:35,163 --> 00:21:38,328
El flujo de efectivo aumenta en
función de paso cuando se agrega

393
00:21:38,328 --> 00:21:42,037
nuevo personal, y la disminución
la productividad hace la

394
00:21:42,037 --> 00:21:44,370
espantosa brecha más aterradora.

395
00:21:45,867 --> 00:21:47,907
- (risas) Sí, tal vez fue un golpe de suerte.

396
00:21:47,907 --> 00:21:49,792
(riendo) Probémoslo de nuevo.

397
00:21:49,792 --> 00:21:52,544
(riendo)

398
00:21:52,544 --> 00:21:56,085
- De hecho, muchas empresas
intenta esto muchas veces

399
00:21:56,085 --> 00:21:59,115
porque, después de todo, la
definición de cordura

400
00:21:59,115 --> 00:22:02,443
es repetir una fallida
estrategia hasta que tenga éxito.

401
00:22:02,443 --> 00:22:04,973
Pero, por supuesto, no tiene éxito, y así

402
00:22:04,973 --> 00:22:09,140
la espantosa brecha continúa creciendo
y se asustan más y más.

403
00:22:12,325 --> 00:22:14,213
- En este punto, podría ser más sabio

404
00:22:14,213 --> 00:22:16,973
consultar con los
mismos programadores.

405
00:22:16,973 --> 00:22:19,333
Ellos están más cerca del problema.

406
00:22:19,333 --> 00:22:21,750
Quizás tienen una solución.

407
00:22:22,944 --> 00:22:25,733
- Oh, sí, seguro que la tiene. (risas)

408
00:22:25,733 --> 00:22:28,341
¿Quieres adivinar de qué se trata?

409
00:22:28,341 --> 00:22:31,296
(pitidos)

410
00:22:31,296 --> 00:22:33,963
(teclas haciendo clic)

411
00:22:35,598 --> 00:22:37,968
- (risas) Sí, comienza de nuevo.

412
00:22:37,968 --> 00:22:39,595
(riendo) Tíralo todo.

413
00:22:39,595 --> 00:22:42,456
(risas) Rediseña todo.

414
00:22:42,456 --> 00:22:44,706
(riendo)

415
00:22:45,571 --> 00:22:48,563
- Sí, como, ya sabes, lo
mejor que podría pasar

416
00:22:48,563 --> 00:22:51,771
a este sistema es que
alguien a caminara en la

417
00:22:51,771 --> 00:22:54,854
sala de máquinas con un imán gigante.

418
00:22:56,331 --> 00:22:59,979
- Oh, oh, Uncle Bob, yo
quiero ser el arquitecto.

419
00:22:59,979 --> 00:23:03,062
¿Puedo, puedo ser el arquitecto?

420
00:23:04,336 --> 00:23:09,048
- Como puedes imaginar, esta
idea emociona a los programadores

421
00:23:09,048 --> 00:23:11,477
pero aterroriza a los gerentes.

422
00:23:11,477 --> 00:23:13,877
Los gerentes saben cuánto
dinero se gastó en el

423
00:23:13,877 --> 00:23:17,208
primer diseño, y el pensamiento
de gastar todo ese dinero

424
00:23:17,208 --> 00:23:20,616
una vez más los enfurece hasta la médula.

425
00:23:20,616 --> 00:23:22,928
Lo que es peor, ellos ya no tienen
confianza en absoluto

426
00:23:22,928 --> 00:23:27,448
que el rediseño en realidad
va a resolver el problema

427
00:23:27,448 --> 00:23:29,277
Pero aquí está la cosa.

428
00:23:29,277 --> 00:23:31,197
¿Qué otra opción tienen?

429
00:23:31,197 --> 00:23:33,723
Quiero decir, han intentado
todo lo demás que saben hacer

430
00:23:33,723 --> 00:23:37,221
y nada ha funcionado, y ellos
no puedo seguir como están las cosas

431
00:23:37,221 --> 00:23:40,240
Por muy tenebrosa que sea esta opción,

432
00:23:40,240 --> 00:23:44,032
es la última oportunidad que ellos tienen.

433
00:23:44,032 --> 00:23:46,541
Y hay otro factor.

434
00:23:46,541 --> 00:23:50,363
Programadores, nunca deberían
subestimar su poder

435
00:23:50,363 --> 00:23:53,101
porque ustedes son los que saben.

436
00:23:53,101 --> 00:23:55,531
Los gerentes no, ellos
no son los que saben.

437
00:23:55,531 --> 00:23:58,819
Ya sabes, fuiste contratado porque tú sabes.

438
00:23:58,819 --> 00:24:02,179
Entonces, si golpeas la batería para rediseñar,

439
00:24:02,179 --> 00:24:04,829
tanto como a los gerentes podría no gustarles,

440
00:24:04,829 --> 00:24:07,389
eventualmente ganarás
porque los gerentes

441
00:24:07,389 --> 00:24:10,806
entienden que ustedes son los que saben.

442
00:24:12,808 --> 00:24:15,768
- Bueno, sí, ganarás bien.

443
00:24:15,768 --> 00:24:17,935
Y será un desastre.

444
00:24:19,859 --> 00:24:22,853
- Y qué desastre será.

445
00:24:22,853 --> 00:24:27,020
Pero no se comienza
mirando como un desastre, oh no.

446
00:24:27,883 --> 00:24:29,664
El día que los gerentes anuncian

447
00:24:29,664 --> 00:24:31,723
que vamos a rediseñar el proyecto,

448
00:24:31,723 --> 00:24:34,896
una alegría sube desde el
organización de desarrollo.

449
00:24:34,896 --> 00:24:37,285
Aleluya, vamos
de regreso al principio.

450
00:24:37,285 --> 00:24:39,115
Podemos ser productivos nuevamente

451
00:24:39,115 --> 00:24:41,224
Vamos a dejar este lío atrás.

452
00:24:41,224 --> 00:24:45,391
Ya no tenemos que vivir con
ese código viejo más.

453
00:24:46,835 --> 00:24:50,704
Por supuesto, al día siguiente en
la fría luz de la realidad,

454
00:24:50,704 --> 00:24:54,061
nos damos cuenta de que no
vamos a ser los que

455
00:24:54,061 --> 00:24:56,451
estarán rediseñando el sistema.

456
00:24:56,451 --> 00:25:00,920
La administración ha elegido el
10 mejores, el equipo tigre.

457
00:25:00,920 --> 00:25:04,381
Los que hicieron el
desastre en primer lugar.

458
00:25:04,381 --> 00:25:07,280
Ellos serán los únicos
que se sentarán en una habitación

459
00:25:07,280 --> 00:25:10,757
trabajando en un proyecto
a campo abierto con el nuevo diseño.

460
00:25:10,757 --> 00:25:13,037
Ellos son los que nos van a guiar

461
00:25:13,037 --> 00:25:15,120
en un nuevo y brillante futuro

462
00:25:17,917 --> 00:25:19,907
El resto de nosotros odiamos a esos tipos.

463
00:25:19,907 --> 00:25:22,088
Ellos están haciendo algo nuevo

464
00:25:22,088 --> 00:25:25,877
mientras que el resto de nosotros estamos atrapados
manteniendo el viejo sistema

465
00:25:25,877 --> 00:25:28,402
porque, después de todo,
los clientes no van a esperar

466
00:25:28,402 --> 00:25:32,235
meses o años para tener nuevas
funcionalidades o correcciones de bugs.

467
00:25:33,587 --> 00:25:36,259
- Y ahora, ¿de dónde crees que

468
00:25:36,259 --> 00:25:39,824
el equipo tigre va a obtener
sus requerimientos?

469
00:25:39,824 --> 00:25:41,221
No crees que en realidad exista un

470
00:25:41,221 --> 00:25:44,471
documento de requeremientos preciso, ¿verdad?

471
00:25:45,944 --> 00:25:50,304
- No, hombre, quiero decir
ha habido demasiadas

472
00:25:50,304 --> 00:25:55,253
reparaciones nocturnas y
modificaciones de medianoche para eso.

473
00:25:55,253 --> 00:25:56,264
- (risas) Sí.

474
00:25:56,264 --> 00:25:58,629
(riendo) Los requerimientos
ya no están en un documento.

475
00:25:58,629 --> 00:26:01,256
(riendo) Ahora están
enterrados en el viejo código.

476
00:26:01,256 --> 00:26:03,736
(riendo)

477
00:26:03,736 --> 00:26:05,085
- Está bien.

478
00:26:05,085 --> 00:26:07,816
Los requerimientos están en el código anterior.

479
00:26:07,816 --> 00:26:10,237
Entonces ese equipo tigre que se supone nos

480
00:26:10,237 --> 00:26:12,067
estaba llevándonos al futuro,

481
00:26:12,067 --> 00:26:15,797
están gastando su tiempo
estudiando el viejo código,

482
00:26:15,797 --> 00:26:17,917
tratando de averiguar qué es lo

483
00:26:17,917 --> 00:26:19,861
que el viejo sistema hace

484
00:26:19,861 --> 00:26:21,160
Y luego están tratando de descubrir

485
00:26:21,160 --> 00:26:24,571
cómo pueden reorganizarse
y reparticionar ese código

486
00:26:24,571 --> 00:26:28,738
para que sea mejor por
alguna definición de mejor.

487
00:26:30,811 --> 00:26:33,200
Mientras tanto, el resto de
nosotros estamos trabajando como perros

488
00:26:33,200 --> 00:26:35,821
para corregir errores y agregar nuevas funciones.

489
00:26:35,821 --> 00:26:39,280
Entonces, mientras el equipo tigre
está estudiando el código,

490
00:26:39,280 --> 00:26:42,780
estamos ocupados cambiándolo de debajo de ellos.

491
00:26:43,640 --> 00:26:45,832
- La implicación lógica es

492
00:26:45,832 --> 00:26:48,832
que las dos facciones están en una carrera.

493
00:26:50,472 --> 00:26:52,341
- Correcto, una carrera.

494
00:26:52,341 --> 00:26:56,291
Y al igual que Aquiles y el
tortuga en la paradoja de Zeno,

495
00:26:56,291 --> 00:27:00,232
cada vez que el equipo tigre
va a donde estaba el viejo sistema,

496
00:27:00,232 --> 00:27:01,992
ya le habríamos movido ese viejo sistema

497
00:27:01,992 --> 00:27:04,909
con nuevas funciones y nuevas correcciones.

498
00:27:06,707 --> 00:27:08,957
- Y mientras es matemáticamente posible

499
00:27:08,957 --> 00:27:13,584
demostrar que Aquiles eventualmente
pasará a la tortuga,

500
00:27:13,584 --> 00:27:16,751
eso no parece funcionar en el software.

501
00:27:18,088 --> 00:27:20,093
- Una vez trabajé para una compañía donde esa

502
00:27:20,093 --> 00:27:22,939
carrera continuó por 10 años.

503
00:27:22,939 --> 00:27:26,520
10 años después de que comenzamos el rediseño,

504
00:27:26,520 --> 00:27:28,309
el desarrollo todavía estaba en marcha

505
00:27:28,309 --> 00:27:31,809
y todavía estábamos instalando el sistema anterior.

506
00:27:32,989 --> 00:27:36,520
Finalmente, en desesperación,
los gerentes decidieron

507
00:27:36,520 --> 00:27:39,269
reemplazar todos los viejos
sistemas en el campo

508
00:27:39,269 --> 00:27:41,920
con nuevos sistemas incluso
aunque los nuevos sistemas

509
00:27:41,920 --> 00:27:46,069
no pudieran hacer todo lo que
los viejos sistemas podían.

510
00:27:46,069 --> 00:27:47,819
- Me imagino que los clientes

511
00:27:47,819 --> 00:27:50,402
estaban bastante descontentos con eso.

512
00:27:52,269 --> 00:27:55,619
- Sí, algunos de ellos
estaban bastante molestos, pero

513
00:27:55,619 --> 00:27:59,808
eso no fue nada comparado
a los desarrolladores.

514
00:27:59,808 --> 00:28:03,189
Verás, el equipo tigre
hacía tiempo que se había marchado

515
00:28:03,189 --> 00:28:05,083
a cosas más grandes y mejores,

516
00:28:05,083 --> 00:28:07,563
y los programadores que los habían reemplazado

517
00:28:07,563 --> 00:28:11,141
estaban corriendo como locos a
mantenerse al día con el viejo sistema.

518
00:28:11,141 --> 00:28:13,171
Estaban horrorizados ante la idea de que

519
00:28:13,171 --> 00:28:15,584
ellos realmente implementarían el nuevo sistema.

520
00:28:15,584 --> 00:28:17,443
Dijeron: "No se puede implementar esto.

521
00:28:17,443 --> 00:28:21,021
"Es basura, tiene que ser rediseñada".

522
00:28:21,021 --> 00:28:23,661
El gran rediseño al aire

523
00:28:23,661 --> 00:28:26,893
casi siempre es una estrategia fallida.

524
00:28:26,893 --> 00:28:29,352
Oh, podría funcionar para algo pequeño

525
00:28:29,352 --> 00:28:31,648
de un par de meses de trabajo más o menos,

526
00:28:31,648 --> 00:28:34,368
pero para grandes proyectos,
es casi seguro que termine

527
00:28:34,368 --> 00:28:38,456
en horrible pérdida y desastre final.

528
00:28:38,456 --> 00:28:41,690
Entonces, es así como código malo puede destruir

529
00:28:41,690 --> 00:28:44,940
un equipo, una división e incluso una empresa.

530
00:28:47,933 --> 00:28:51,053
- Y aquí está la conclusión.

531
00:28:51,053 --> 00:28:54,973
No puedes lidiar con un desastre
huyendo de él.

532
00:28:54,973 --> 00:28:57,573
La única manera de efectivamente
lidiar con ese desastre

533
00:28:57,573 --> 00:29:00,672
es dar la vuelta y enfrentarlo

534
00:29:00,672 --> 00:29:03,172
y encontrar lo podrido y limpiarlo.

535
00:29:04,331 --> 00:29:07,760
(pitidos)

536
00:29:07,760 --> 00:29:10,427
(teclas haciendo clic)

537
00:29:13,389 --> 00:29:15,979
- ¿Qué pasa con el software a través del tiempo?

538
00:29:15,979 --> 00:29:17,312
¿Por qué se pudre?

539
00:29:18,309 --> 00:29:21,200
¿Por qué los bellos diseños con los que empezamos?

540
00:29:21,200 --> 00:29:25,117
a menudo se degradan y se pudren
en una pila supurante?

541
00:29:27,709 --> 00:29:31,507
- En el momento de
inicio, el diseño de un

542
00:29:31,507 --> 00:29:35,093
sistema de software es generalmente simple,

543
00:29:35,093 --> 00:29:37,923
y elegante, y una cosa hermosa.

544
00:29:37,923 --> 00:29:41,181
Y del mismo modo, cuando
primero escribimos el código,

545
00:29:41,181 --> 00:29:46,037
ese código es simple, y
fácil de cambiar y elegante

546
00:29:46,037 --> 00:29:49,204
y nuestras esperanzas para el sistema son altas.

547
00:29:50,717 --> 00:29:53,749
- Pero con el tiempo, ese código comenzará a pudrirse

548
00:29:53,749 --> 00:29:57,069
como un pedazo de carne mala
sentado en un granero caliente.

549
00:29:57,069 --> 00:29:59,544
Y el hedor se pondrá tan mal que ni siquiera

550
00:29:59,544 --> 00:30:02,461
los cerdos y los cuervos se acercarán a él.

551
00:30:03,712 --> 00:30:06,733
- Puedes decir cuántos años tiene un código

552
00:30:06,733 --> 00:30:09,443
por la expresión facial de los desarrolladores

553
00:30:09,443 --> 00:30:12,943
a medida que lo muestran en sus pantallas, hmm.

554
00:30:15,024 --> 00:30:17,573
- Antes de investigar por qué sucede esto,

555
00:30:17,573 --> 00:30:20,952
estudiemos ese hedor con más detalle.

556
00:30:20,952 --> 00:30:24,619
¿Qué es eso que hace que el
código malo huele tan mal?

557
00:30:25,893 --> 00:30:28,893
(sonidos mecánicos)

558
00:30:31,235 --> 00:30:35,402
- La rigidez es la tendencia
de un sistema para resistir el cambio.

559
00:30:37,653 --> 00:30:41,264
- Un sistema es rígido cuando
ese sistema nos requiere

560
00:30:41,264 --> 00:30:44,595
hacer muchos cambios en
muchos lugares diferentes

561
00:30:44,595 --> 00:30:49,093
para arreglar un solo error
o agregar una sola funcionalidad nueva.

562
00:30:49,093 --> 00:30:53,260
Tal sistema se resiste al cambio,
y entonces decimos que es rígido.

563
00:30:55,224 --> 00:30:58,141
- Realmente apreciaría un ejemplo.

564
00:30:59,584 --> 00:31:02,773
- Claro, digamos que tu jefe

565
00:31:02,773 --> 00:31:05,392
viene a ti un día y
muestra un informe de un bug

566
00:31:05,392 --> 00:31:07,371
y te pregunta si puedes arreglarlo.

567
00:31:07,371 --> 00:31:09,509
Miras ese reporte de bug
y te das cuenta que

568
00:31:09,509 --> 00:31:11,251
sabes exactamente dónde está ese error.

569
00:31:11,251 --> 00:31:13,931
Ya sabes la línea de código en la que está el error

570
00:31:13,931 --> 00:31:17,328
porque precisament estabas en ese
módulo hace una semana o dos.

571
00:31:17,328 --> 00:31:20,248
Y sabes cómo solucionarlo
también, va a ser fácil.

572
00:31:20,248 --> 00:31:25,229
Va a ser muy fácil,
simple como un pastel, "no problemo".

573
00:31:25,229 --> 00:31:28,597
Entonces le das a tu jefe una
estimación mínima: tres semanas.

574
00:31:28,597 --> 00:31:30,389
Él se va feliz porque él consiguió

575
00:31:30,389 --> 00:31:33,448
la estimación mínima para esa tarea.

576
00:31:33,448 --> 00:31:36,027
Ahora vas a ese módulo
y te desplazas hacia abajo

577
00:31:36,027 --> 00:31:37,659
a donde piensas que esta ese error.

578
00:31:37,659 --> 00:31:41,717
Y por supuesto, ahí está
justo como pensaste que sería.

579
00:31:41,717 --> 00:31:44,168
Entonces llegas exactamente ahí
y lo arreglas.

580
00:31:44,168 --> 00:31:46,037
Y te pones a hacer otra cosa

581
00:31:46,037 --> 00:31:48,309
para que no le des a tu jefe
la idea de que tu mínima

582
00:31:48,309 --> 00:31:50,880
estimación estuvo un poco larga.

583
00:31:50,880 --> 00:31:54,600
Pero luego está ese picor
en la parte posterior de tu cabeza.

584
00:31:54,600 --> 00:31:58,259
Algo te está molestando
sobre ese cambio, hijo.

585
00:31:58,259 --> 00:32:01,651
Y es entonces cuando te das cuenta
que el cambio que acabas de hacer

586
00:32:01,651 --> 00:32:05,699
ese módulo va a romper un
diferente módulo en el sistema.

587
00:32:05,699 --> 00:32:08,331
Entonces te devuelves y
traes ese otro módulo

588
00:32:08,331 --> 00:32:11,120
en la pantalla y te desplazas
al lugar donde estabas

589
00:32:11,120 --> 00:32:14,619
pensando y seguro,
encuentres un problema

590
00:32:14,619 --> 00:32:16,819
El cambio que hiciste en el primer módulo es

591
00:32:16,819 --> 00:32:18,840
incompatible con el segundo.

592
00:32:18,840 --> 00:32:23,691
Entonces abres ese
segundo módulo y lo arreglas.

593
00:32:23,691 --> 00:32:25,920
Y ahora sabes lo que viene, ¿no?

594
00:32:25,920 --> 00:32:28,792
Porque seguro como la lluvia en un día soleado,

595
00:32:28,792 --> 00:32:31,901
hay otros módulos en el
sistema que no son simpaticos

596
00:32:31,901 --> 00:32:35,472
con ese cambio que acabas
de hacer en ese segundo módulo.

597
00:32:35,472 --> 00:32:39,272
Así que ahora empiezas a ir desde
módulo a módulo a módulo

598
00:32:39,272 --> 00:32:42,163
arreglando problema tras problema, tratando de forzar

599
00:32:42,163 --> 00:32:44,872
el sistema de regreso a un estado consistente.

600
00:32:44,872 --> 00:32:48,883
Eres como un perro persiguiendo su
cola, quemando mucha energía.

601
00:32:48,883 --> 00:32:51,633
Pero no estás yendo a ningún lugar.

602
00:32:53,064 --> 00:32:55,564
- Y entonces las semanas pasarán.

603
00:32:56,483 --> 00:33:01,024
Dos semanas, tres semanas,
cuatro semanas, seis semanas,

604
00:33:01,024 --> 00:33:02,912
y luego tu jefe vendrá

605
00:33:02,912 --> 00:33:06,032
para descubrir lo que pasó
a su estimación de tres semanas,

606
00:33:06,032 --> 00:33:09,744
y tu indudablemente
dirás la frase patética

607
00:33:09,744 --> 00:33:13,893
que tantos desarrolladores de software
han dicho en el pasado,

608
00:33:13,893 --> 00:33:17,483
"Fue más complicado de lo que pensaba".

609
00:33:17,483 --> 00:33:18,316
Hmph.

610
00:33:21,891 --> 00:33:24,051
- Sí, ese es un sistema rígido.

611
00:33:24,051 --> 00:33:26,320
Y muestra una de las
cosas más frustrantes

612
00:33:26,320 --> 00:33:30,211
sobre sistemas rígidos: su
impredecibilidad salvaje.

613
00:33:30,211 --> 00:33:33,861
La estimacion de un fix o una
mejora está plagada de errores

614
00:33:33,861 --> 00:33:36,531
porque es imposible
determinar correctamente el número

615
00:33:36,531 --> 00:33:39,320
de módulos que realmente serán modificados.

616
00:33:39,320 --> 00:33:42,320
Y entonces los sistemas rígidos echan a perder las estimaciones.

617
00:33:43,301 --> 00:33:44,134
- (Risas) Sí.

618
00:33:44,134 --> 00:33:45,616
(risas) Boom!

619
00:33:45,616 --> 00:33:47,866
(riendo)

620
00:33:48,733 --> 00:33:51,733
(sonidos mecánicos)

621
00:33:53,701 --> 00:33:56,851
- Un sistema frágil es un
sistema que funciona mal

622
00:33:56,851 --> 00:33:59,571
de muchas maneras impredecibles cuando

623
00:33:59,571 --> 00:34:01,988
se realiza un simple cambio simple.

624
00:34:03,899 --> 00:34:07,179
- Decimos que un sistema es frágil

625
00:34:07,179 --> 00:34:10,317
cuando la reparación de un solo error

626
00:34:10,317 --> 00:34:13,608
o la adición de una nueva función

627
00:34:13,608 --> 00:34:17,320
causa un mal funcionamiento en
una o muchas otras partes

628
00:34:17,320 --> 00:34:19,840
del sistema que no tiene conexión

629
00:34:19,840 --> 00:34:22,423
con la parte que fue cambiada

630
00:34:23,971 --> 00:34:27,221
- Lo sé, quieres otro
ejemplo, ¿no?

631
00:34:27,221 --> 00:34:31,069
Bueno, este tipo tiene una buena.

632
00:34:31,069 --> 00:34:33,656
- Hace mucho tiempo, trabajé en un sistema

633
00:34:33,656 --> 00:34:36,277
que probaba líneas telefónicas.

634
00:34:36,277 --> 00:34:39,808
Este sistema tenía 24 terminales ASCII

635
00:34:39,808 --> 00:34:42,317
conectadas a una mini computadora central.

636
00:34:42,317 --> 00:34:46,877
La interfaz de usuario estaba
basada en caracteres y dirigida por menús.

637
00:34:46,877 --> 00:34:49,688
Y los menús eran jerárquicos

638
00:34:49,688 --> 00:34:52,808
En el fondo de uno de los submenús,

639
00:34:52,808 --> 00:34:55,757
habia un error gramatical.

640
00:34:55,757 --> 00:34:58,924
El progreso de la palabra fue un proceso deletreado.

641
00:34:59,907 --> 00:35:01,387
Todos sabíamos acerca de este error.

642
00:35:01,387 --> 00:35:03,587
Todos nos encogíamos cada vez que lo veíamos,

643
00:35:03,587 --> 00:35:07,254
pero nunca hubo un
buena razón para arreglarlo.

644
00:35:08,608 --> 00:35:10,928
Entonces, un día, estaba trabajando en un módulo

645
00:35:10,928 --> 00:35:15,157
y pasó que me desplacé por
la cadena de ese menú.

646
00:35:15,157 --> 00:35:18,456
Fue algo fácil de
cambiar, así que lo cambié.

647
00:35:18,456 --> 00:35:22,072
Me sentí muy bien acerca de eso también.

648
00:35:22,072 --> 00:35:25,200
Por supuesto, lo compilé y lo probé.

649
00:35:25,200 --> 00:35:28,421
Lo probé en la pantalla
para asegurarme de que encajara

650
00:35:28,421 --> 00:35:31,784
y no hubo ningún otro
problemas, no lo hubo.

651
00:35:31,784 --> 00:35:34,413
Y entonces lo agregué a la lista de cambios

652
00:35:34,413 --> 00:35:37,580
para la próxima versión y lo instalé.

653
00:35:39,163 --> 00:35:42,843
Cientos de sistemas comenzaron a
fallar en el campo.

654
00:35:42,843 --> 00:35:45,779
No eran nuestros sistemas, eran los sistemas de nuestros clientes,

655
00:35:45,779 --> 00:35:47,555
pero nos culparon de todos modos.

656
00:35:47,555 --> 00:35:49,691
Teníamos clientes por teléfono.

657
00:35:49,691 --> 00:35:52,152
Teníamos gerentes haciendo estragos,

658
00:35:52,152 --> 00:35:53,960
señalando con sus dedos a las personas.

659
00:35:53,960 --> 00:35:57,627
Tuvimos programadores
escondiéndose debajo de sus escritorios.

660
00:35:58,917 --> 00:36:03,624
Lo que había olvidado era que
en su infinita sabiduría,

661
00:36:03,624 --> 00:36:07,235
nuestro departamento de marketing
le había dicho a nuestro cliente

662
00:36:07,235 --> 00:36:10,893
que la mejor forma de conectar
sus sistemas con los nuestros

663
00:36:10,893 --> 00:36:12,813
era conectar sus computadoras a

664
00:36:12,813 --> 00:36:16,221
uno de nuestros puertos de terminal RS232.

665
00:36:16,221 --> 00:36:17,923
Por supuesto, eso significaba que el software

666
00:36:17,923 --> 00:36:20,883
del cliente tenia que parsear nuestros menús.

667
00:36:20,883 --> 00:36:22,632
Entonces cuando cambié ese menú,

668
00:36:22,632 --> 00:36:25,382
rompió el software del cliente.

669
00:36:26,363 --> 00:36:30,043
Mi jefe vino a mí y me dijo:
"¿Qué demonios hiciste?"

670
00:36:30,043 --> 00:36:32,603
Y dije, arreglé un error de ortografía.

671
00:36:32,603 --> 00:36:35,936
Y él dijo: "¡Bueno, nunca hagas eso!"

672
00:36:37,013 --> 00:36:40,603
- Y entonces un sistema frágil
es un sistema que se rompe

673
00:36:40,603 --> 00:36:43,773
de maneras no intencionadas e impredecibles

674
00:36:43,773 --> 00:36:46,549
cuando se hacen cambios simples

675
00:36:46,549 --> 00:36:49,749
Tales sistemas son terroríficos
a gerentes y clientes

676
00:36:49,749 --> 00:36:53,166
porque son muy impredecibles.

677
00:36:54,149 --> 00:36:57,400
- De hecho, cuando los sistemas son frágiles,

678
00:36:57,400 --> 00:36:59,891
clientes y gerentes
llegan a la conclusión

679
00:36:59,891 --> 00:37:03,019
que los desarrolladores de software
han perdido el control de su

680
00:37:03,019 --> 00:37:06,869
software y no saben que
demonios están haciendo.

681
00:37:06,869 --> 00:37:07,702
Hmph!

682
00:37:08,776 --> 00:37:11,776
(sonidos mecánicos)

683
00:37:13,875 --> 00:37:16,984
- Un sistema inseparable
es un sistema en el cual

684
00:37:16,984 --> 00:37:21,165
esas partes que podrían ser
utilizadas de manera rentable en otro sistema

685
00:37:21,165 --> 00:37:24,998
no se pueden separar
del primer sistema

686
00:37:26,565 --> 00:37:30,413
- De hecho, decimos que
un sistema es inseparable

687
00:37:30,413 --> 00:37:32,723
cuando los diversos puntos de ese sistema

688
00:37:32,723 --> 00:37:36,890
no puede ser independiente y ser
utilizado en algún otro sistema.

689
00:37:38,101 --> 00:37:40,680
- Dejame darte un ejemplo.

690
00:37:40,680 --> 00:37:43,501
Digamos que necesito un auto nuevo,

691
00:37:43,501 --> 00:37:47,072
y tengo requisitos muy específicos
para este nuevo automóvil.

692
00:37:47,072 --> 00:37:50,040
Tiene que ser plateado,
tiene que sentar a seis,

693
00:37:50,040 --> 00:37:53,571
y tiene que ir a 200 millas por hora.

694
00:37:53,571 --> 00:37:54,957
Resulta que hablé con mi

695
00:37:54,957 --> 00:37:57,267
cuñado y él tiene el auto.

696
00:37:57,267 --> 00:38:01,075
Es plateado, tiene capacidad para seis personas
va a 200 millas por hora.

697
00:38:01,075 --> 00:38:03,315
Además, acaba de perder su licencia,

698
00:38:03,315 --> 00:38:07,184
así que me lo dará gratis.

699
00:38:07,184 --> 00:38:09,275
Solo hay una trampa.

700
00:38:09,275 --> 00:38:11,795
El auto de mi cuñado tiene un trailer.

701
00:38:11.795 --> 00:38:13.608
(tocando la bocina)
Y este trailer no estaba acoplado

702
00:38:13,608 --> 00:38:16,312
a la parte trasera del auto
sin problemas, no señor.

703
00:38:16,312 --> 00:38:19,333
Ese remolque estaba soldado
en la parte posterior de ese auto.

704
00:38:19,333 --> 00:38:21,173
Los frenos traseros han sido
quitado del automóvil

705
00:38:21,173 --> 00:38:23,360
y puestos en las ruedas traseras del remolque.

706
00:38:23,360 --> 00:38:25,651
Las luces traseras se han puesto
en la parte posterior del remolque.

707
00:38:25,651 --> 00:38:28,234
El trailer es parte del auto.

708
00:38:30,160 --> 00:38:34,621
Ahora me da un muy pequeño
garaje, y ese auto remolque,

709
00:38:34,621 --> 00:38:37,280
bueno, simplemente no va
a caber en ese garaje.

710
00:38:37,280 --> 00:38:40,259
Así que tengo que deshacerme de la
trailer de la parte trasera de ese auto.

711
00:38:40,259 --> 00:38:41,829
Voy a llevarlo a un mecánico.

712
00:38:41,829 --> 00:38:44,888
Yo digo, mecánico, quita el
trailer de la parte trasera de este auto.

713
00:38:44,888 --> 00:38:47,227
(tocando la bocina)
Él me mira como si estuviera loco.

714
00:38:47,227 --> 00:38:49,272
Él dice: "No puedes tomar
el trailer de la parte posterior

715
00:38:49,272 --> 00:38:51,704
"de este auto, ese
remolque es parte del auto.

716
00:38:51,704 --> 00:38:54,315
"Te costará mucho más
que comprar un auto nuevo.

717
00:38:54,315 --> 00:38:59,144
"Y además, no te puedo
garantizar el trabajo".

718
00:38:59,144 --> 00:39:03,005
- Para continuar este ejemplo,
tu jefe viene a ti un día

719
00:39:03,005 --> 00:39:06,424
y dice: "Sabes ese
módulo que tienes que escribir?

720
00:39:06,424 --> 00:39:09,413
"Bueno, hay este tipo,
Joe, un piso debajo de nosotros

721
00:39:09,413 --> 00:39:12,304
"¿Quién escribió un módulo justo
como ese hace un año.

722
00:39:12,304 --> 00:39:14,355
"Deberías ir a hablar con
Joe y ver cuánto

723
00:39:14,355 --> 00:39:16,938
"de ese módulo que puedes reutilizar".

724
00:39:18,443 --> 00:39:22,610
Ahora, conoces a Joe, y sabes
el tipo de código que Joe escribe.

725
00:39:23,781 --> 00:39:27,861
Entonces no estás realmente ansioso
ir vadeando a través de su código

726
00:39:27,861 --> 00:39:30,909
para ver si puedes usar algo de eso, pero

727
00:39:30,909 --> 00:39:34,076
tu jefe preguntó, entonces tienes que hacerlo.

728
00:39:35,261 --> 00:39:38,651
Entonces obtienes el código de
Joe y lo vuelves a mirar.

729
00:39:38,651 --> 00:39:42,869
Y por supuesto, hace
exactamente lo que necesitas

730
00:39:42,869 --> 00:39:44,786
Pero tiene un trailer.

731
00:39:48,469 --> 00:39:51,869
El código de Joe hace mucha
cosas que no necesitas

732
00:39:51,869 --> 00:39:54,640
Y te das cuenta de que el
tiempo y esfuerzo requeridos

733
00:39:54,640 --> 00:39:57,411
desacoplar el código de Joe para que puedas

734
00:39:57,411 --> 00:40:00,861
toma lo que quieras y
deshacerte de las cosas que no haces

735
00:40:00,861 --> 00:40:02,968
es tan grande que también podrías

736
00:40:02,968 --> 00:40:05,551
solo escribe el módulo tú mismo.

737
00:40:06,747 --> 00:40:09,504
Entonces vuelves a tu jefe
y le dices que tú

738
00:40:09,504 --> 00:40:13,337
no puede usar el código de Joe
porque es inseparable

739
00:40:16,853 --> 00:40:20,184
- Los sistemas inseparables son impredecibles.

740
00:40:20,184 --> 00:40:22,933
Nunca se sabe si
puede reutilizar los componentes

741
00:40:22,933 --> 00:40:24,965
en el sistema, y ​​entonces los cambios

742
00:40:24,965 --> 00:40:27,798
no se puede estimar confiablemente, hmm.

743
00:40:28,696 --> 00:40:31,696
(sonidos mecánicos)

744
00:40:33,864 --> 00:40:36,483
- Opacidad es la tendencia de un sistema

745
00:40:36,483 --> 00:40:40,733
estar tan ineptamente estructurado
que sin esfuerzo

746
00:40:40,733 --> 00:40:44,900
se puede aplicar a la divina
intención original del autor.

747
00:40:46,032 --> 00:40:48,699
- Decimos que un sistema es opaco

748
00:40:49,552 --> 00:40:52,451
al leer el código
nos dice poco o nada

749
00:40:52,451 --> 00:40:56,826
sobre lo que el sistema
hace o la forma en que funciona.

750
00:40:56,826 --> 00:40:59,227
(Cerdos gruñendo)
- Lo que están tratando de decir

751
00:40:59,227 --> 00:41:00,677
es que el código se ve peor

752
00:41:00,677 --> 00:41:03,260
que una pocilga de cerdo en una tormenta de lluvia.

753
00:41:05,525 --> 00:41:08,358
- Esta imagen realmente lo dice todo.

754
00:41:10,125 --> 00:41:13,245
El código opaco es difícil de leer,

755
00:41:13,245 --> 00:41:16,162
difícil de cambiar, difícil de entender

756
00:41:17,616 --> 00:41:18,449
- ¡Meh!

757
00:41:20,221 --> 00:41:23,221
(sonidos mecánicos)

758
00:41:25,603 --> 00:41:27,752
- Alza las manos si alguna vez has estado

759
00:41:27,752 --> 00:41:30,585
significativamente impedido por el mal código.

760
00:41:32,053 --> 00:41:34,886
(multitud clamando)

761
00:41:38,411 --> 00:41:41,285
Y ustedes allá afuera en
al otro lado de la pantalla,

762
00:41:41,285 --> 00:41:45,125
Te veo por ahí, levanta
tus manos arriba porque

763
00:41:45,125 --> 00:41:49,292
todos hemos sido impedidos por el mal
código, significativamente impedido.

764
00:41:50,483 --> 00:41:53,483
La pregunta es ¿por qué lo escribimos?

765
00:41:56,112 --> 00:41:58,261
- (risas) gerentes estúpidos.

766
00:41:58,261 --> 00:42:00,511
(riendo)

767
00:42:02,440 --> 00:42:06,459
- Ya sabes, como, hombre, hemos
tenido clientes realmente impacientes

768
00:42:06,459 --> 00:42:09,959
y, bueno, simplemente no podían esperar.

769
00:42:11,429 --> 00:42:15,596
- Oh, Uncle Bob, nosotros simplemente
tenemos horarios imposibles

770
00:42:18,099 --> 00:42:22,757
- Disculpe, pero esas son
solo excusas y salidas fáciles.

771
00:42:22,757 --> 00:42:25,256
Son tus dedos en el teclado.

772
00:42:25,256 --> 00:42:27,107
Eres tú quien escribes el código.

773
00:42:27,107 --> 00:42:28,690
Eres tú, no ellos.

774
00:42:29,755 --> 00:42:30,588
Hmm.

775
00:42:32,344 --> 00:42:33,864
- Sherlock tiene razón.

776
00:42:33,864 --> 00:42:37,891
La única razón por la cual el código va
mal es porque lo arruinamos.

777
00:42:37,891 --> 00:42:40,080
Nosotros somos los que hacemos el desorden.

778
00:42:40,080 --> 00:42:41,413
Pudrimos el código.

779
00:42:42,811 --> 00:42:44,021
- (risas) Sí.

780
00:42:44,021 --> 00:42:46,389
Pero tenemos que ir rápido. (riendo)

781
00:42:46,389 --> 00:42:50,677
Y esa es la única manera de
ir rápido (riendo)

782
00:42:50,677 --> 00:42:55,165
- Sí, como, quiero decir,
los clientes nunca me darán

783
00:42:55,165 --> 00:42:58,165
el tiempo de hacer las cosas de la manera correcta.

784
00:43:00,056 --> 00:43:03,907
- Sí, Uncle Bob, tenemos que ir rápido, y

785
00:43:03,907 --> 00:43:06,240
es por eso que hacemos el desorden.

786
00:43:07,515 --> 00:43:11,155
- Entiendo, sientes
la presión de la fecha límite

787
00:43:11,155 --> 00:43:15,704
y la urgencia de la
cliente, y entonces te apresuras.

788
00:43:15,704 --> 00:43:18,954
Pero cada vez que te apresuras, haces un desastre.

789
00:43:20,856 --> 00:43:25,387
- Sí, pero, como, amigo, tú
Sabe, siempre podemos regresar

790
00:43:25,387 --> 00:43:29,554
y limpiarlo más tarde cuando
no tenemos tanta prisa.

791
00:43:30,944 --> 00:43:34,003
- ¿Volver y limpiarlo más tarde?

792
00:43:34,003 --> 00:43:36,453
Vuelve y límpialo más tarde?

793
00:43:36,453 --> 00:43:38,603
¿Podrías decirme la última vez

794
00:43:38,603 --> 00:43:41,603
que volviste y lo limpiaste despues?!

795
00:43:43,141 --> 00:43:46,211
- No sucede, todos lo sabemos.

796
00:43:46,211 --> 00:43:49,171
La presión de la fecha límite no
disminuye de repente.

797
00:43:49,171 --> 00:43:53,032
Los clientes de repente no se vuelven más pacientes.

798
00:43:53,032 --> 00:43:57,199
La urgencia nunca disminuye,
los horarios nunca se relajan realmente.

799
00:43:58,360 --> 00:44:02,269
Todos sabemos que decir que
volveremos y lo arreglaremos más tarde

800
00:44:02,269 --> 00:44:05,519
significa que nunca volveremos.

801
00:44:07,080 --> 00:44:11,320
La ironía es que hacer líos
no es la forma en que vas rápido

802
00:44:11,320 --> 00:44:14,725
Es la forma en que vas lento,
y ya sabes esto.

803
00:44:14,725 --> 00:44:16,915
Lo has reconocido, dijiste que estabas

804
00:44:16,915 --> 00:44:19,748
significativamente impedido por el mal código.

805
00:44:22,016 --> 00:44:25,987
- Si quieres ir rápido,
tienes que mantener tu código limpio.

806
00:44:25,987 --> 00:44:29,154
La única manera de ir rápido es ir bien.

807
00:44:31,125 --> 00:44:35,805
- Esto puede ser difícil de aceptar
porque la mayoría de nosotros sentimos

808
00:44:35,805 --> 00:44:39,024
que podemos ir más rápido corriendo.

809
00:44:39,024 --> 00:44:41,080
La verdad es que, sin embargo, no puedes.

810
00:44:41,080 --> 00:44:45,247
Si apresuras el código,
siempre reducirás la velocidad.

811
00:44:46,277 --> 00:44:49,157
Ahora algunas personas piensan
que pueden ir más rápido

812
00:44:49,157 --> 00:44:52,208
en el corto plazo apresurándose, incluso si eso

813
00:44:52,208 --> 00:44:54,408
los ralentiza a largo plazo,

814
00:44:54,408 --> 00:44:56,357
pero esto es una ilusión.

815
00:44:56,357 --> 00:44:59,747
Correr siempre te vuelve lento,
incluso en el corto plazo.

816
00:44:59,747 --> 00:45:03,104
Hacer un desastre nunca es
una estrategia para ir rápido.

817
00:45:03,104 --> 00:45:05,584
La única manera de ir rápido en el corto plazo

818
00:45:05,584 --> 00:45:08,251
o el largo plazo es ser limpio.

819
00:45:10,061 --> 00:45:11,752
- Ah, saltamontes.

820
00:45:11,752 --> 00:45:15,112
¿Alguna vez has visto un
chef de sushi preparar la comida?

821
00:45:15,112 --> 00:45:17,779
La próxima vez que vaya, preste mucha atención.

822
00:45:17,779 --> 00:45:20,888
Puedes decir que el chef
ha practicado sus movimientos.

823
00:45:20,888 --> 00:45:22,909
Cada movimiento tiene un propósito.

824
00:45:22,909 --> 00:45:25,437
Cada movimiento es seguro y rápido.

825
00:45:25,437 --> 00:45:27,784
Cada movimiento es preciso.

826
00:45:27,784 --> 00:45:30,944
Corta, corta, rueda, coloca

827
00:45:30,944 --> 00:45:34,173
en una ráfaga de actividad concentrada.

828
00:45:34,173 --> 00:45:36,824
Y luego viene el momento mágico

829
00:45:36,824 --> 00:45:39,952
donde toma el plato y
él lo pone enfrente de ti.

830
00:45:39,952 --> 00:45:42,211
La presentación es impecable.

831
00:45:42,211 --> 00:45:44,314
Pero, saltamontes, mira su espacio de trabajo.

832
00:45:44,314 --> 00:45:45,147


833
00:45:45,147 --> 00:45:47,963
Su espacio de trabajo es limpio e impecable.

834
00:45:47,963 --> 00:45:51,221
Él ha estado limpiando
durante todo el procedimiento

835
00:45:51,221 --> 00:45:55,388
porque, saltamontes, esa es
la única forma en que puede ir rápido.

836
00:45:57,003 --> 00:46:00,072
(pitidos)

837
00:46:00,072 --> 00:46:02,739
(teclas haciendo clic)

838
00:46:05,173 --> 00:46:06,923
- ¿Qué es código limpio?

839
00:46:08,203 --> 00:46:11,763
Le pregunté a varios expertos esa pregunta.

840
00:46:11,763 --> 00:46:13,930
Y esto es lo que dijeron.

841
00:46:15,032 --> 00:46:19,843
Bjarne Stroustrup, el
inventor de C++, dijo,

842
00:46:19,843 --> 00:46:23,510
"Me gusta que mi código sea
elegante y eficiente.

843
00:46:24,344 --> 00:46:27,094
"El código limpio debería hacer una cosa".

844
00:46:30,104 --> 00:46:34,271
Código elegante es código que
hace mucho con pocas palabras.

845
00:46:36,253 --> 00:46:40,420
El código eficiente es código que
usa muy pocos ciclos de CPU.

846
00:46:41,344 --> 00:46:45,261
Pero, qué significa
para que el código haga una cosa?

847
00:46:46,824 --> 00:46:48,173
Eso es algo de lo que hablaremos

848
00:46:48,173 --> 00:46:50,590
en un próximo episodio.

849
00:46:52,117 --> 00:46:56,408
Grady Booch, el autor
de este clásico de los 90,

850
00:46:56,408 --> 00:47:00,435
Diseño orientado a objetos y
Análisis con aplicaciones,

851
00:47:00,435 --> 00:47:03,685
dijo: "El código limpio es simple y directo.

852
00:47:05,443 --> 00:47:09,533
"Código limpio se lee como
prosa bien escrita ".

853
00:47:09,533 --> 00:47:11,613
Entendemos la parte simple y directa,

854
00:47:11,613 --> 00:47:14,024
eso no necesita
mucha explicación, pero

855
00:47:14,024 --> 00:47:17,976
¿Qué significa código para
leer como una prosa bien escrita?

856
00:47:17,976 --> 00:47:19,809
¿Es eso posible?

857
00:47:21,005 --> 00:47:25,027
La respuesta simple
es, sí, es posible.

858
00:47:25,027 --> 00:47:29,147
La respuesta un poco más larga
es, bueno, casi posible.

859
00:47:29,147 --> 00:47:32,325
Tendremos realmente
mucho que decir sobre esto

860
00:47:32,325 --> 00:47:34,408
en los siguientes episodios.

861
00:47:35,925 --> 00:47:39,633
Michael Feathers, el autor
de Working Effectively

862
00:47:39,633 --> 00:47:41,550
with Legacy Code, dijo,

863
00:47:43,843 --> 00:47:45,808
"El código limpio siempre se ve como

864
00:47:45,808 --> 00:47:48,975
"si fuera escrito por alguien a quien le importa".

865
00:47:50,259 --> 00:47:52,749
Qué comentario más encantador.

866
00:47:52,749 --> 00:47:56,149
Podría ser maravillo
si todo el código que leemos

867
00:47:56,149 --> 00:47:58,832
pareciera que estaba escrito
por alguien a quien le importa

868
00:47:58,832 --> 00:48:01,013
¿Alguna vez has leído código que pareciera

869
00:48:01,013 --> 00:48:04,139
como que al autor no le importó en absoluto?

870
00:48:04,139 --> 00:48:06,267
Este curso va a ser sobre

871
00:48:06,267 --> 00:48:09,100
aprendiendo a cuidar nuestro código

872
00:48:10,627 --> 00:48:13,877
Ward Cunningham, el inventor de los wikis,

873
00:48:15,419 --> 00:48:18,024
el inventor de más
cosas de las que puedo hablar,

874
00:48:18,024 --> 00:48:20,857
el mentor de la mayoría de nosotros, dijo,

875
00:48:25,275 --> 00:48:28,275
"Sabes que estás leyendo el código limpio

876
00:48:28,275 --> 00:48:31,573
"cuando cada rutina que lees

877
00:48:31,573 --> 00:48:34,490
"es más o menos lo que esperabas".

878
00:48:35,824 --> 00:48:40,464
Es muy parecido a lo que Ward
dijo algo tan profundo

879
00:48:40,464 --> 00:48:43,664
usando palabras que suenan tan inocuas, pero

880
00:48:43,664 --> 00:48:45,640
piénsalo, ¿cuándo es la última vez

881
00:48:45,640 --> 00:48:48,467
que leíste código y pensaste,

882
00:48:48,467 --> 00:48:51,256
"Sí, esto es mas o menos
lo que esperaba"?

883
00:48:51,256 --> 00:48:54,461
¿No sería lindo si nosotros
todos podrían aprender a escribir código

884
00:48:54,461 --> 00:48:58,331
que fuera más o menos lo que
esperábamos y, de hecho,

885
00:48:58,331 --> 00:49:00,709
de eso se tratan estos videos:

886
00:49:00,709 --> 00:49:04,237
cómo escribir código que otros piensen

887
00:49:04,237 --> 00:49:07,307
que es más o menos lo que esperaban.

888
00:49:07,307 --> 00:49:10,659


889
00:49:10,659 --> 00:49:13,326


890
00:49:16,048 --> 00:49:20,776
Robert Baden Powell, el
padre de los boy scouts,

891
00:49:20,776 --> 00:49:23,267
dejó una exhortación póstuma

892
00:49:23,267 --> 00:49:25,685
a la organización que él fundó.

893
00:49:25,685 --> 00:49:29,852
Él les dijo: "Deja el mundo"
mejor de lo que lo encontraste ".

894
00:49:31,816 --> 00:49:34,573
¿Y si hiciéramos eso con nuestro código?

895
00:49:34,573 --> 00:49:38,155
¿Qué pasa si dejamos nuestro código?
mejor de lo que lo encontramos?

896
00:49:38,155 --> 00:49:41,432
¿Qué pasa si cada vez que
verificas un módulo,

897
00:49:41,432 --> 00:49:43,032
lo dejaste solo un poco

898
00:49:43,032 --> 00:49:45,168
mejor que cuando lo encontraste?

899
00:49:45,168 --> 00:49:48,907
¿Qué pasa si siempre haces
algún acto de bondad al azar

900
00:49:48,907 --> 00:49:51,379
al código para que
sea mejor y mejor,

901
00:49:51,379 --> 00:49:54,744
y nunca lo dejaste peor.

902
00:49:54,744 --> 00:49:58,584
Si todos hiciéramos eso, entonces
nuestro código simplemente se volveria

903
00:49:58,584 --> 00:50:01,413
cada vez mejor y mejor todo el tiempo,

904
00:50:01,413 --> 00:50:05,413
y eso, también, es lo que
este curso se trata.

905
00:50:06,789 --> 00:50:08,997
Bueno, eso es todo, esta es nuestra nueva versión de

906
00:50:08,997 --> 00:50:11,469
episodio uno, espero que lo hayas disfrutado.

907
00:50:11,469 --> 00:50:14,437
Y si esta es la primera vez
has visto un episodio,

908
00:50:14,437 --> 00:50:17,248
bueno, tienes mucho que esperar.

909
00:50:17,248 --> 00:50:20,667
El segundo episodio trata sobre
eligiendo buenos nombres.

910
00:50:20,667 --> 00:50:23,613
Episodio tres, cuatro,
y cinco son sobre

911
00:50:23,613 --> 00:50:25,880
funciones y estructura de funciones.

912
00:50:25,880 --> 00:50:29,459
El episodio seis es un videojuego de dos partes
sobre Test-driven Development.

913
00:50:29,459 --> 00:50:32,227
El episodio siete trata sobre arquitectura,

914
00:50:32,227 --> 00:50:35,507
y luego empezamos a con
los principios SOLID,

915
00:50:35,507 --> 00:50:37,664
y luego los principios de componentes,

916
00:50:37,664 --> 00:50:40,440
y luego advanced Test-driven Development.

917
00:50:40,440 --> 00:50:43,245
Y solo arañamos la superficie.

918
00:50:43,245 --> 00:50:45,412
Hay mucho más por venir.

919
00:50:46,376 --> 00:50:48,793


920
00:51:17,323 --> 00:51:21,477
The Scarier Gap, se llama
después de un hombre llamado Fred Scarier.

921
00:51:21,477 --> 00:51:25,155
No importa, está bien.
(riendo)

922
00:51:25,155 --> 00:51:26,181
- [Camera Person] De acuerdo, ¿listo?

923
00:51:26,181 --> 00:51:28,027
- No, no estoy listo para nada, no.

924
00:51:28,027 --> 00:51:31,194
Bueno. (se aclara la garganta)

925
00:51:32,576 --> 00:51:34,536
- [Camera Person] Action.

926
00:51:34,536 --> 00:51:37,453
- Por supuesto. (riendo)

927
00:51:40,208 --> 00:51:41,766
Por supuesto.
(riendo)

928
00:51:41,766 --> 00:51:43,544
Digamos ahora, sí, sí, sí.

929
00:51:43,544 --> 00:51:44,771
De acuerdo, está bien, claro.

930
00:51:44,771 --> 00:51:46,957
(se aclara la garganta) Sí.

931
00:51:46,957 --> 00:51:49,207
(riendo)

932
00:51:50,344 --> 00:51:53,557
Un sistema rígido. (palabras vacilantes)

933
00:51:53,557 --> 00:51:56,605
Estimando cuánto tiempo, sí, está bien.

934
00:51:56,605 --> 00:51:58,699
(sonido de zumbido)

935
00:51:58,699 --> 00:52:01,866
(sonido de aleteo de labios)

936
00:52:03,763 --> 00:52:07,235
- Sí, eso es un rígido
sistema, bien, porque

937
00:52:07,235 --> 00:52:11,402
usted ve, los sistemas rígidos son
muy impredecible, y

938
00:52:12,435 --> 00:52:14,336
estimándolos, tratando de resolverlos

939
00:52:14,336 --> 00:52:18,203
está lleno de error y frustración

940
00:52:18,203 --> 00:52:20,203
porque, bueno, lo que sea.

941
00:52:21,131 --> 00:52:23,048
Porque, um, algo.

942
00:52:26,331 --> 00:52:28,750
Porque nunca puedes hacer apropiadamente.

943
00:52:28,750 --> 00:52:30,285
- [Camera Person] está lleno de errores

944
00:52:30,285 --> 00:52:32,483
porque nunca puedes determinar apropiadamente,

945
00:52:32,483 --> 00:52:35,008
todas las partes de la
sistema va a necesitar

946
00:52:35,008 --> 00:52:39,133
para ser cambiado, tan rígido
los sistemas tienden a superar las estimaciones.

947
00:52:39,133 --> 00:52:41,560
Se suponía que debías sincronizar los labios con eso.

948
00:52:41,560 --> 00:52:44,024
- Bueno, lo estaba intentando.

949
00:52:44,024 --> 00:52:46,939
- [Camera Person] No fue
muy exitoso, diría yo.

950
00:52:46,939 --> 00:52:48,616
Hagamos esto, me siento bien acerca de

951
00:52:48,616 --> 00:52:49,939
this next one.
- Yeah, yeah, do you?

952
00:52:49,939 --> 00:52:51,856
- Mhmm.
- Okay, alright.

953
00:52:53,907 --> 00:52:56,243
- [Camera Person] Action.

954
00:52:56,243 --> 00:52:58,493
(laughing)

955
00:53:00,984 --> 00:53:02,760
That's such a good one.

956
00:53:02,760 --> 00:53:04,260
That's a good one.

957
00:53:05,555 --> 00:53:08,805
- And so, rigid systems blow estimates.

958
00:53:12,773 --> 00:53:15,483
- [Camera Person] Cut. Good job.

959
00:53:15,483 --> 00:53:17,179
So if you looked right at me.

960
00:53:17,179 --> 00:53:18,637
- 'Cause at the last minute I thought,

961
00:53:18,637 --> 00:53:20,325
no, I'm talking about fragile systems.

962
00:53:20,325 --> 00:53:23,683
- [Camera Person] Oh, you said 'em.

963
00:53:23,683 --> 00:53:25,869
- Yeah, that's a rigid system,

964
00:53:25,869 --> 00:53:28,120
and it shows one of the
most frustrating things

965
00:53:28,120 --> 00:53:31,989
about rigid systems: their
wild unpredictability.

966
00:53:31,989 --> 00:53:35,680
Estimating a fix or an
enhancement is fraught with error

967
00:53:35,680 --> 00:53:38,059
because it's impossible
to properly determine

968
00:53:38,059 --> 00:53:41,171
the number of modules that
will actually be changed.

969
00:53:41,171 --> 00:53:44,254
And so, rigid systems blow estimates.

970
00:53:46,240 --> 00:53:47,323
- Cut.
- Yeah!

971
00:53:48,390 --> 00:53:49,880
(laughing)

972
00:53:49,880 --> 00:53:51,531
- Cannot be predicted, blah, blah, blah,

973
00:53:51,531 --> 00:53:53,261
blah, blah, blah, blah.

974
00:53:53,261 --> 00:53:54,678
Blah, blah, blah.

975
00:53:56,779 --> 00:53:59,997
- Mmm, saltamontes,
has visto alguna vez a

976
00:53:59,997 --> 00:54:01,997
un chef de Sushi preparar comida?

977
00:54:04,510 --> 00:54:07,760
Ayuda, ayuda!
(Risas)

